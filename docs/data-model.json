{
  "version": "1.0.0",
  "updatedAt": "2025-08-25T00:00:00.000Z",
  "notes": "Source-of-truth JSON data model and endpoint contracts for the HairDo mobile app. Schemas are JSON Schema (Draft-07â€“style) nested under components.schemas. Endpoints describe expected request/response shapes, auth, and pagination.",
  "security": {
    "scheme": "Bearer",
    "description": "Send Authorization: Bearer <token> for authenticated routes"
  },
  "pagination": {
    "query": {
      "page": { "type": "integer", "minimum": 1, "default": 1 },
      "limit": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 },
      "cursor": { "type": ["string", "null"] }
    },
    "response": {
      "page": { "type": "integer" },
      "limit": { "type": "integer" },
      "total": { "type": "integer" },
      "nextCursor": { "type": ["string", "null"] }
    }
  },
  "components": {
    "enums": {
      "BookingStatus": ["pending", "confirmed", "cancelled", "completed"],
      "MediaType": ["photo", "video"],
      "MessageType": ["text", "image", "video", "system"],
      "NotificationType": ["system", "booking_update", "message", "promotion", "reward"],
      "UserRole": ["customer", "barber", "admin"],
      "Theme": ["light", "dark", "system"],
      "Language": ["en", "es", "fr", "de", "it"],
      "Currency": ["USD", "EUR", "GBP", "CAD", "AUD"]
    },
    "schemas": {
      "Identifier": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_-]{6,}$",
        "description": "Opaque unique identifier"
      },
      "Timestamp": { "type": "string", "format": "date-time" },
      "Money": {
        "type": "object",
        "properties": {
          "amount": { "type": "number" },
          "currency": { "type": "string", "enum": { "$ref": "#/components/enums/Currency" } }
        },
        "required": ["amount", "currency"]
      },
      "Address": {
        "type": "object",
        "properties": {
          "line1": { "type": "string" },
          "line2": { "type": ["string", "null"] },
          "city": { "type": "string" },
          "state": { "type": "string" },
          "postalCode": { "type": "string" },
          "country": { "type": "string", "minLength": 2, "maxLength": 2 }
        },
        "required": ["line1", "city", "state", "postalCode", "country"]
      },
      "Geo": {
        "type": "object",
        "properties": {
          "lat": { "type": "number", "minimum": -90, "maximum": 90 },
          "lng": { "type": "number", "minimum": -180, "maximum": 180 }
        },
        "required": ["lat", "lng"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": ["string", "null"] },
          "name": { "type": "string" },
          "avatarUrl": { "type": ["string", "null"], "format": "uri" },
          "role": { "type": "string", "enum": { "$ref": "#/components/enums/UserRole" } },
          "salonId": { "anyOf": [{ "$ref": "#/components/schemas/Identifier" }, { "type": "null" }] },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "updatedAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "email", "name", "role", "createdAt", "updatedAt"]
      },
      "BarberProfile": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "bio": { "type": ["string", "null"] },
          "specialties": { "type": "array", "items": { "type": "string" } },
          "rating": { "type": "number", "minimum": 0, "maximum": 5 },
          "totalReviews": { "type": "integer", "minimum": 0 }
        },
        "required": ["userId"]
      },
      "Salon": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "name": { "type": "string" },
          "address": { "$ref": "#/components/schemas/Address" },
          "geo": { "$ref": "#/components/schemas/Geo" },
          "phone": { "type": ["string", "null"] },
          "images": { "type": "array", "items": { "type": "string", "format": "uri" } },
          "openingHours": { "type": "object", "additionalProperties": { "type": "string" } },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "updatedAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "name", "address", "geo", "createdAt", "updatedAt"]
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "salonId": { "$ref": "#/components/schemas/Identifier" },
          "name": { "type": "string" },
          "description": { "type": ["string", "null"] },
          "price": { "$ref": "#/components/schemas/Money" },
          "durationMinutes": { "type": "integer", "minimum": 5 },
          "active": { "type": "boolean", "default": true }
        },
        "required": ["id", "salonId", "name", "price", "durationMinutes"]
      },
      "MediaItem": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "type": { "type": "string", "enum": { "$ref": "#/components/enums/MediaType" } },
          "url": { "type": "string", "format": "uri" },
          "description": { "type": ["string", "null"] },
          "width": { "type": ["integer", "null"] },
          "height": { "type": ["integer", "null"] },
          "durationSeconds": { "type": ["number", "null"] },
          "ownerUserId": { "$ref": "#/components/schemas/Identifier" },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "type", "url", "ownerUserId", "createdAt"]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "barberUserId": { "$ref": "#/components/schemas/Identifier" },
          "salonId": { "$ref": "#/components/schemas/Identifier" },
          "serviceId": { "$ref": "#/components/schemas/Identifier" },
          "status": { "type": "string", "enum": { "$ref": "#/components/enums/BookingStatus" } },
          "scheduledStart": { "$ref": "#/components/schemas/Timestamp" },
          "scheduledEnd": { "$ref": "#/components/schemas/Timestamp" },
          "price": { "$ref": "#/components/schemas/Money" },
          "specialInstructions": { "type": ["string", "null"] },
          "inspirationMediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } },
          "workMediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "updatedAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "userId", "barberUserId", "salonId", "serviceId", "status", "scheduledStart", "scheduledEnd", "price", "createdAt", "updatedAt"]
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "bookingId": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
          "comment": { "type": ["string", "null"] },
          "mediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "bookingId", "userId", "rating", "createdAt"]
      },
      "ChatThread": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "participantUserIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" }, "minItems": 2 },
          "lastMessageAt": { "$ref": "#/components/schemas/Timestamp" },
          "unreadCountByUserId": { "type": "object", "additionalProperties": { "type": "integer", "minimum": 0 } },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "participantUserIds", "createdAt"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "threadId": { "$ref": "#/components/schemas/Identifier" },
          "senderUserId": { "$ref": "#/components/schemas/Identifier" },
          "type": { "type": "string", "enum": { "$ref": "#/components/enums/MessageType" } },
          "text": { "type": ["string", "null"] },
          "mediaId": { "anyOf": [{ "$ref": "#/components/schemas/Identifier" }, { "type": "null" }] },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "threadId", "senderUserId", "type", "createdAt"]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "type": { "type": "string", "enum": { "$ref": "#/components/enums/NotificationType" } },
          "title": { "type": "string" },
          "body": { "type": "string" },
          "data": { "type": "object", "additionalProperties": true },
          "readAt": { "anyOf": [{ "$ref": "#/components/schemas/Timestamp" }, { "type": "null" }] },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "userId", "type", "title", "body", "createdAt"]
      },
      "NotificationSettings": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "bookingUpdates": { "type": "boolean", "default": true },
          "messages": { "type": "boolean", "default": true },
          "promotions": { "type": "boolean", "default": true },
          "system": { "type": "boolean", "default": true }
        },
        "required": ["userId"]
      },
      "AppearanceSettings": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "theme": { "type": "string", "enum": { "$ref": "#/components/enums/Theme" }, "default": "system" }
        },
        "required": ["userId", "theme"]
      },
      "PrivacySettings": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "showProfilePublic": { "type": "boolean", "default": true },
          "shareActivity": { "type": "boolean", "default": true }
        },
        "required": ["userId"]
      },
      "SecuritySettings": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "twoFactorEnabled": { "type": "boolean", "default": false },
          "backupEmail": { "type": ["string", "null"], "format": "email" },
          "phoneVerified": { "type": "boolean", "default": false }
        },
        "required": ["userId"]
      },
      "LanguageRegional": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "language": { "type": "string", "enum": { "$ref": "#/components/enums/Language" }, "default": "en" },
          "region": { "type": ["string", "null"] }
        },
        "required": ["userId", "language"]
      },
      "Availability": {
        "type": "object",
        "properties": {
          "barberUserId": { "$ref": "#/components/schemas/Identifier" },
          "weeklyTemplate": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "start": { "type": "string", "pattern": "^\\d{2}:\\d{2}$" },
                  "end": { "type": "string", "pattern": "^\\d{2}:\\d{2}$" }
                },
                "required": ["start", "end"]
              }
            }
          },
          "exceptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": { "type": "string", "format": "date" },
                "closed": { "type": "boolean" },
                "slots": { "type": "array", "items": { "type": "string", "pattern": "^\\d{2}:\\d{2}$" } }
              },
              "required": ["date"]
            }
          }
        },
        "required": ["barberUserId", "weeklyTemplate"]
      },
      "Slot": {
        "type": "object",
        "properties": {
          "start": { "$ref": "#/components/schemas/Timestamp" },
          "end": { "$ref": "#/components/schemas/Timestamp" },
          "barberUserId": { "$ref": "#/components/schemas/Identifier" },
          "salonId": { "$ref": "#/components/schemas/Identifier" },
          "serviceId": { "$ref": "#/components/schemas/Identifier" },
          "isBooked": { "type": "boolean" }
        },
        "required": ["start", "end", "barberUserId", "salonId", "serviceId", "isBooked"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "bookingId": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "amount": { "$ref": "#/components/schemas/Money" },
          "provider": { "type": "string", "enum": ["stripe", "paypal", "local"] },
          "status": { "type": "string", "enum": ["requires_payment_method", "requires_confirmation", "processing", "succeeded", "failed", "refunded"] },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" },
          "updatedAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "bookingId", "userId", "amount", "provider", "status", "createdAt", "updatedAt"]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "planId": { "type": "string" },
          "status": { "type": "string", "enum": ["active", "past_due", "canceled", "incomplete"] },
          "currentPeriodEnd": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "userId", "planId", "status", "currentPeriodEnd"]
      },
      "Reward": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "pointsRequired": { "type": "integer", "minimum": 0 },
          "active": { "type": "boolean" }
        },
        "required": ["id", "title", "pointsRequired", "active"]
      },
      "RewardBalance": {
        "type": "object",
        "properties": {
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "points": { "type": "integer", "minimum": 0 }
        },
        "required": ["userId", "points"]
      },
      "RewardTransaction": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "userId": { "$ref": "#/components/schemas/Identifier" },
          "type": { "type": "string", "enum": ["earn", "redeem"] },
          "points": { "type": "integer" },
          "reason": { "type": "string" },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "userId", "type", "points", "createdAt"]
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "title": { "type": "string" },
          "body": { "type": "string" },
          "startsAt": { "$ref": "#/components/schemas/Timestamp" },
          "endsAt": { "$ref": "#/components/schemas/Timestamp" },
          "active": { "type": "boolean" }
        },
        "required": ["id", "title", "startsAt", "endsAt", "active"]
      },
      "Follow": {
        "type": "object",
        "properties": {
          "followerUserId": { "$ref": "#/components/schemas/Identifier" },
          "followedUserId": { "$ref": "#/components/schemas/Identifier" },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["followerUserId", "followedUserId", "createdAt"]
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": { "$ref": "#/components/schemas/Identifier" },
          "authorUserId": { "$ref": "#/components/schemas/Identifier" },
          "caption": { "type": ["string", "null"] },
          "mediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } },
          "createdAt": { "$ref": "#/components/schemas/Timestamp" }
        },
        "required": ["id", "authorUserId", "createdAt"]
      }
    }
  },
  "endpoints": [
    {
      "name": "Register",
      "method": "POST",
      "path": "/auth/register",
      "auth": false,
      "request": {
        "body": {
          "type": "object",
          "properties": {
            "email": { "type": "string", "format": "email" },
            "password": { "type": "string", "minLength": 8 },
            "name": { "type": "string" },
            "role": { "type": "string", "enum": { "$ref": "#/components/enums/UserRole" } }
          },
          "required": ["email", "password", "name", "role"]
        }
      },
      "responses": {
        "201": {
          "type": "object",
          "properties": {
            "user": { "$ref": "#/components/schemas/User" },
            "token": { "type": "string" }
          },
          "required": ["user", "token"]
        }
      }
    },
    {
      "name": "Login",
      "method": "POST",
      "path": "/auth/login",
      "auth": false,
      "request": {
        "body": {
          "type": "object",
          "properties": {
            "email": { "type": "string", "format": "email" },
            "password": { "type": "string" }
          },
          "required": ["email", "password"]
        }
      },
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "user": { "$ref": "#/components/schemas/User" },
            "token": { "type": "string" }
          },
          "required": ["user", "token"]
        }
      }
    },
    {
      "name": "List Salons",
      "method": "GET",
      "path": "/salons",
      "auth": false,
      "request": {
        "query": {
          "type": "object",
          "properties": {
            "q": { "type": ["string", "null"] },
            "lat": { "type": ["number", "null"] },
            "lng": { "type": ["number", "null"] },
            "radiusKm": { "type": ["number", "null"], "default": 10 },
            "page": { "type": "integer" },
            "limit": { "type": "integer" }
          }
        }
      },
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "items": { "type": "array", "items": { "$ref": "#/components/schemas/Salon" } },
            "page": { "type": "integer" },
            "limit": { "type": "integer" },
            "total": { "type": "integer" }
          },
          "required": ["items", "page", "limit", "total"]
        }
      }
    },
    {
      "name": "Get Salon",
      "method": "GET",
      "path": "/salons/{salonId}",
      "auth": false,
      "pathParams": { "salonId": { "$ref": "#/components/schemas/Identifier" } },
      "responses": { "200": { "$ref": "#/components/schemas/Salon" } }
    },
    {
      "name": "List Services for Salon",
      "method": "GET",
      "path": "/salons/{salonId}/services",
      "auth": false,
      "pathParams": { "salonId": { "$ref": "#/components/schemas/Identifier" } },
      "responses": {
        "200": { "type": "array", "items": { "$ref": "#/components/schemas/Service" } }
      }
    },
    {
      "name": "Search Barbers",
      "method": "GET",
      "path": "/barbers",
      "auth": false,
      "request": {
        "query": {
          "type": "object",
          "properties": {
            "salonId": { "anyOf": [{ "$ref": "#/components/schemas/Identifier" }, { "type": "null" }] },
            "q": { "type": ["string", "null"] },
            "page": { "type": "integer" },
            "limit": { "type": "integer" }
          }
        }
      },
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "items": { "type": "array", "items": { "$ref": "#/components/schemas/User" } },
            "page": { "type": "integer" },
            "limit": { "type": "integer" },
            "total": { "type": "integer" }
          }
        }
      }
    },
    {
      "name": "Get Slots for Barber",
      "method": "GET",
      "path": "/barbers/{barberUserId}/slots",
      "auth": false,
      "pathParams": { "barberUserId": { "$ref": "#/components/schemas/Identifier" } },
      "request": {
        "query": {
          "type": "object",
          "properties": {
            "from": { "type": "string", "format": "date-time" },
            "to": { "type": "string", "format": "date-time" },
            "serviceId": { "$ref": "#/components/schemas/Identifier" }
          },
          "required": ["from", "to", "serviceId"]
        }
      },
      "responses": { "200": { "type": "array", "items": { "$ref": "#/components/schemas/Slot" } } }
    },
    {
      "name": "Create Booking",
      "method": "POST",
      "path": "/bookings",
      "auth": true,
      "request": {
        "body": {
          "type": "object",
          "properties": {
            "barberUserId": { "$ref": "#/components/schemas/Identifier" },
            "salonId": { "$ref": "#/components/schemas/Identifier" },
            "serviceId": { "$ref": "#/components/schemas/Identifier" },
            "scheduledStart": { "type": "string", "format": "date-time" },
            "specialInstructions": { "type": ["string", "null"] },
            "inspirationMediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } }
          },
          "required": ["barberUserId", "salonId", "serviceId", "scheduledStart"]
        }
      },
      "responses": { "201": { "$ref": "#/components/schemas/Booking" } }
    },
    {
      "name": "List My Bookings",
      "method": "GET",
      "path": "/me/bookings",
      "auth": true,
      "request": {
        "query": {
          "type": "object",
          "properties": {
            "status": { "type": ["string", "null"], "enum": { "$ref": "#/components/enums/BookingStatus" } },
            "page": { "type": "integer" },
            "limit": { "type": "integer" }
          }
        }
      },
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "items": { "type": "array", "items": { "$ref": "#/components/schemas/Booking" } },
            "page": { "type": "integer" },
            "limit": { "type": "integer" },
            "total": { "type": "integer" }
          }
        }
      }
    },
    {
      "name": "Get Booking",
      "method": "GET",
      "path": "/bookings/{bookingId}",
      "auth": true,
      "pathParams": { "bookingId": { "$ref": "#/components/schemas/Identifier" } },
      "responses": { "200": { "$ref": "#/components/schemas/Booking" } }
    },
    {
      "name": "Reschedule Booking",
      "method": "PATCH",
      "path": "/bookings/{bookingId}/reschedule",
      "auth": true,
      "pathParams": { "bookingId": { "$ref": "#/components/schemas/Identifier" } },
      "request": {
        "body": { "type": "object", "properties": { "scheduledStart": { "type": "string", "format": "date-time" } }, "required": ["scheduledStart"] }
      },
      "responses": { "200": { "$ref": "#/components/schemas/Booking" } }
    },
    {
      "name": "Cancel Booking",
      "method": "POST",
      "path": "/bookings/{bookingId}/cancel",
      "auth": true,
      "pathParams": { "bookingId": { "$ref": "#/components/schemas/Identifier" } },
      "responses": { "200": { "$ref": "#/components/schemas/Booking" } }
    },
    {
      "name": "Add Booking Inspiration",
      "method": "POST",
      "path": "/bookings/{bookingId}/inspiration",
      "auth": true,
      "pathParams": { "bookingId": { "$ref": "#/components/schemas/Identifier" } },
      "request": { "body": { "type": "object", "properties": { "mediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } } }, "required": ["mediaIds"] } },
      "responses": { "200": { "$ref": "#/components/schemas/Booking" } }
    },
    {
      "name": "Upload Media",
      "method": "POST",
      "path": "/media",
      "auth": true,
      "request": { "body": { "type": "object", "properties": { "type": { "type": "string", "enum": { "$ref": "#/components/enums/MediaType" } }, "url": { "type": "string", "format": "uri" }, "description": { "type": ["string", "null"] } }, "required": ["type", "url"] } },
      "responses": { "201": { "$ref": "#/components/schemas/MediaItem" } }
    },
    {
      "name": "Create Review",
      "method": "POST",
      "path": "/bookings/{bookingId}/reviews",
      "auth": true,
      "pathParams": { "bookingId": { "$ref": "#/components/schemas/Identifier" } },
      "request": { "body": { "type": "object", "properties": { "rating": { "type": "integer", "minimum": 1, "maximum": 5 }, "comment": { "type": ["string", "null"] }, "mediaIds": { "type": "array", "items": { "$ref": "#/components/schemas/Identifier" } } }, "required": ["rating"] } },
      "responses": { "201": { "$ref": "#/components/schemas/Review" } }
    },
    {
      "name": "List Threads",
      "method": "GET",
      "path": "/me/threads",
      "auth": true,
      "responses": { "200": { "type": "array", "items": { "$ref": "#/components/schemas/ChatThread" } } }
    },
    {
      "name": "Get Messages",
      "method": "GET",
      "path": "/threads/{threadId}/messages",
      "auth": true,
      "pathParams": { "threadId": { "$ref": "#/components/schemas/Identifier" } },
      "request": { "query": { "type": "object", "properties": { "cursor": { "type": ["string", "null"] }, "limit": { "type": "integer" } } } },
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "items": { "type": "array", "items": { "$ref": "#/components/schemas/Message" } },
            "nextCursor": { "type": ["string", "null"] }
          }
        }
      }
    },
    {
      "name": "Send Message",
      "method": "POST",
      "path": "/threads/{threadId}/messages",
      "auth": true,
      "pathParams": { "threadId": { "$ref": "#/components/schemas/Identifier" } },
      "request": { "body": { "type": "object", "properties": { "type": { "type": "string", "enum": { "$ref": "#/components/enums/MessageType" } }, "text": { "type": ["string", "null"] }, "mediaId": { "anyOf": [{ "$ref": "#/components/schemas/Identifier" }, { "type": "null" }] } }, "required": ["type"] } },
      "responses": { "201": { "$ref": "#/components/schemas/Message" } }
    },
    {
      "name": "List Notifications",
      "method": "GET",
      "path": "/me/notifications",
      "auth": true,
      "responses": { "200": { "type": "array", "items": { "$ref": "#/components/schemas/Notification" } } }
    },
    {
      "name": "Mark Notification Read",
      "method": "POST",
      "path": "/notifications/{notificationId}/read",
      "auth": true,
      "pathParams": { "notificationId": { "$ref": "#/components/schemas/Identifier" } },
      "responses": { "200": { "$ref": "#/components/schemas/Notification" } }
    },
    {
      "name": "Get Settings",
      "method": "GET",
      "path": "/me/settings",
      "auth": true,
      "responses": {
        "200": {
          "type": "object",
          "properties": {
            "notifications": { "$ref": "#/components/schemas/NotificationSettings" },
            "appearance": { "$ref": "#/components/schemas/AppearanceSettings" },
            "privacy": { "$ref": "#/components/schemas/PrivacySettings" },
            "security": { "$ref": "#/components/schemas/SecuritySettings" },
            "language": { "$ref": "#/components/schemas/LanguageRegional" }
          },
          "required": ["notifications", "appearance", "privacy", "security", "language"]
        }
      }
    },
    {
      "name": "Update Settings",
      "method": "PATCH",
      "path": "/me/settings",
      "auth": true,
      "request": {
        "body": {
          "type": "object",
          "properties": {
            "notifications": { "$ref": "#/components/schemas/NotificationSettings" },
            "appearance": { "$ref": "#/components/schemas/AppearanceSettings" },
            "privacy": { "$ref": "#/components/schemas/PrivacySettings" },
            "security": { "$ref": "#/components/schemas/SecuritySettings" },
            "language": { "$ref": "#/components/schemas/LanguageRegional" }
          }
        }
      },
      "responses": { "200": { "$ref": "#/components/schemas/User" } }
    },
    {
      "name": "Create Payment Intent",
      "method": "POST",
      "path": "/payments/intents",
      "auth": true,
      "request": { "body": { "type": "object", "properties": { "bookingId": { "$ref": "#/components/schemas/Identifier" } }, "required": ["bookingId"] } },
      "responses": { "201": { "type": "object", "properties": { "clientSecret": { "type": "string" } }, "required": ["clientSecret"] } }
    },
    {
      "name": "List Payments",
      "method": "GET",
      "path": "/me/payments",
      "auth": true,
      "responses": { "200": { "type": "array", "items": { "$ref": "#/components/schemas/Payment" } } }
    },
    {
      "name": "List Rewards",
      "method": "GET",
      "path": "/rewards",
      "auth": true,
      "responses": { "200": { "type": "array", "items": { "$ref": "#/components/schemas/Reward" } } }
    },
    {
      "name": "Get Reward Balance",
      "method": "GET",
      "path": "/me/rewards/balance",
      "auth": true,
      "responses": { "200": { "$ref": "#/components/schemas/RewardBalance" } }
    },
    {
      "name": "Redeem Reward",
      "method": "POST",
      "path": "/me/rewards/redeem",
      "auth": true,
      "request": { "body": { "type": "object", "properties": { "rewardId": { "$ref": "#/components/schemas/Identifier" } }, "required": ["rewardId"] } },
      "responses": { "200": { "$ref": "#/components/schemas/RewardTransaction" } }
    }
  ],
  "tbd": [
    "Exact set of languages/locales supported (expand components.enums.Language).",
    "Payments provider-specific fields for intents, webhooks, and confirmations.",
    "Media upload storage strategy (S3, Cloudinary) and signed URL flow.",
    "Salon opening hours detailed model (holidays, split shifts).",
    "Promotion targeting rules (by salon, user segments).",
    "Post interactions (likes, comments) if social feed is expanded.",
    "Admin moderation endpoints for reviews, posts, and promotions."
  ]
}


